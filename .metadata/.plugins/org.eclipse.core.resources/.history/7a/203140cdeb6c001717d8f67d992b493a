package photos;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

public class PhotoReader {
	public static void main(String[] args) throws IOException {
		BufferedImage img = null;
		File f = null;
		int x = 0;
		int y = 0;

		// reads the image
		try {
			f = new File("photos/test.jpg");
			img = ImageIO.read(f);

		} catch (IOException e) {
			System.out.println("If you're getting this Stefan, you fucked up somewhere");
			System.out.println(e);
		}

		// gets the images width
		int imgWidth = img.getWidth();
		System.out.println("Image's width: " + imgWidth);

		// gets the images height
		int imgHeight = img.getHeight();
		System.out.println("Image's height: " + imgHeight);
		System.out.println();
		System.out.println();

		// gets the pixels...theoretically
		// for whatever reason, pixels stop being counted 1 before the edge of
		// the photo being read

		System.out.println(x);
		System.out.println(y);
		do {
			for (int i = 0; i < imgHeight; i++) {
				// y++;
				for (int j = 0; j < imgWidth; j++) {

					if (x == img.getWidth()) {
						x = 0;
						y++;
					}

					int pixel = img.getRGB(x, y);

					System.out.println("Pixel at co-oridinates x: " + x + ", y : " + y);

					// gets the alpha values of the pixel
					int a = (pixel >> 24) & 0xFF;
					System.out.println("Alpha value: " + a);

					// gets the red values of the pixel
					int r = (pixel >> 16) & 0xFF;
					System.out.println("Red value: " + r);

					// gets the green values of the pixel
					int g = (pixel >> 8) & 0xFF;
					System.out.println("Green value: " + g);

					// gets the blue values of the pixel
					int b = pixel & 0xFF;
					System.out.println("Blue value: " + b);

					x++;

				}
			}

		} while (y <  406 - img.getHeight());
	}
}
